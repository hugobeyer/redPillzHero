[gd_resource type="VisualShader" load_steps=62 format=3 uid="uid://3ojho7wv7rhs"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_sijua"]
output_port_for_preview = 0
parameter_name = "Color"
qualifier = 2
default_value_enabled = true
default_value = Color(0.335938, 0.335938, 0.335938, 1)

[sub_resource type="VisualShaderNodeVaryingGetter" id="VisualShaderNodeVaryingGetter_sijua"]
varying_name = "view_direction"
varying_type = 4

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_wdsbm"]
size = Vector2(620, 340)
expression = "vec3 view = normalize(view_direction);
vec3 debug_color = view * 0.5 + 0.5;
output0 = debug_color;"

[sub_resource type="VisualShaderNodeFresnel" id="VisualShaderNodeFresnel_lumjx"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_ktyvw"]
size = Vector2(620, 560)
expression = "vec3 view = normalize(view_direction);
vec3 debug_color = view * 0.5 + 0.5;

// Calculate screen position and its derivatives
vec3 pos = vec3(SCREEN_UV, 0.0);
vec3 ddx_pos = dFdx(pos);
vec3 ddy_pos = dFdy(pos);

// Calculate normal from derivatives
vec3 screen_normal = normalize(cross(ddx_pos, ddy_pos));

// Calculate outline based on view and screen normal
float outline = abs(dot(view, screen_normal));
outline = 1.0 - smoothstep(0.50, 0.6, outline);

output0 = mix(debug_color, vec3(0.0), outline);"

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_wdsbm"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0, 1, 1)]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_lumjx"]
input_name = "normal"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ktyvw"]
input_name = "light"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_2surh"]
input_name = "view"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_7jggf"]
input_name = "light"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_xs7ly"]

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_h30ox"]

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_jaqig"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0, 1, 1)]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_tx61k"]
input_name = "normal"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_a5taj"]
operator = 6

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_ovj6o"]
parameter_name = "SpecOffset"
qualifier = 2
hint = 1
min = -1.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_1gw0q"]

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_7mly5"]
default_input_values = [0, 1.0, 1, 128.0, 2, 0.5]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_olxc2"]
parameter_name = "SpecSize"
qualifier = 2
hint = 1
default_value_enabled = true
default_value = 32.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_ewg7y"]
operator = 5

[sub_resource type="VisualShaderNodeSmoothStep" id="VisualShaderNodeSmoothStep_8reba"]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_eqp0p"]
parameter_name = "SpecSmoothness"
qualifier = 2
hint = 1
max = 4.0
default_value_enabled = true
default_value = 0.2

[sub_resource type="VisualShaderNodeFloatFunc" id="VisualShaderNodeFloatFunc_78ewf"]
function = 31

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_fpc6l"]
default_input_values = [0, 0.0, 1, -1.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_n057q"]
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_je8oi"]
parameter_name = "SpecIntentity"
qualifier = 2
hint = 1
max = 4.0
default_value_enabled = true
default_value = 2.0

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_xqppd"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_nj5ee"]
parameter_name = "SpecColor"
qualifier = 2
default_value_enabled = true

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_wwkh1"]
default_input_values = [0, 0.0, 1, 0.0, 2, 0.0, 3, 0.0]
op_type = 2

[sub_resource type="VisualShaderNodeSmoothStep" id="VisualShaderNodeSmoothStep_5fxqp"]
default_input_values = [0, -0.5, 1, 1.5, 2, 0.5]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_bd8jm"]
parameter_name = "DiffuseWrap"
qualifier = 2
hint = 1
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_o6yja"]
default_input_values = [0, 0.0, 1, -1.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_wagsx"]
default_input_values = [0, 0.0, 1, 1.0]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_cgmxv"]
default_input_values = [0, 0.0, 1, 2.0]
operator = 3

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_nsq7e"]
default_input_values = [0, 0.0, 1, 0.5]
operator = 1

[sub_resource type="VisualShaderNodeFresnel" id="VisualShaderNodeFresnel_86x63"]
default_input_values = [2, true, 3, 25.475]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_by2qv"]

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_4t3d0"]
default_input_values = [0, 0.0, 1, 0.0, 2, 0.0, 3, 0.0]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_t13me"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(0, 0, 0, 0)]
op_type = 2
operator = 2

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_y74mc"]
parameter_name = "FresnelColor"
qualifier = 2
default_value_enabled = true

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_ibjci"]
input_name = "normal"

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_j6eyr"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_l6n84"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(2, 2, 2)]
operator = 1

[sub_resource type="VisualShaderNodeTransformVecMult" id="VisualShaderNodeTransformVecMult_m05ms"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_v6o5x"]
input_name = "view"

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_1k56i"]
default_input_values = [0, 0.0, 1, -2.0, 2, 0.0]

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_p5m3e"]
parameter_name = "FloatParameter"
qualifier = 2

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_sijua"]
default_input_values = [0, 0.0, 1, 0.0, 2, 1.0]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_xs7ly"]
input_name = "normal"

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_h30ox"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1), 2, Vector3(0.5, 0.5, 0.5)]
op_type = 3

[sub_resource type="VisualShaderNodeVaryingGetter" id="VisualShaderNodeVaryingGetter_jaqig"]

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_tx61k"]
size = Vector2(640, 360)
expression = "vec3 view_normal = normalize(view_direction);
vec3 base_normal = vec3(0.0, 0.0, -1.0);
float scale = clamp(abs(sphere_scale), 0.0, 1.0);
vec3 fresnel = mix(base_normal, view_normal, scale);
OUTPUT = normalize(sphere_scale < 0.0 ? -fresnel : fresnel);"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_a5taj"]
parameter_name = "FresnelPower"
qualifier = 2

[sub_resource type="VisualShaderNodeParameterRef" id="VisualShaderNodeParameterRef_ovj6o"]
parameter_name = "sphereScale"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_7mly5"]
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_ewg7y"]
parameter_name = "FresnelIntensity"
qualifier = 2
default_value_enabled = true
default_value = 4.0

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_ccw8l"]
size = Vector2(250, 150)

[sub_resource type="VisualShaderNodeExpression" id="VisualShaderNodeExpression_a6p4u"]
size = Vector2(780, 420)
expression = "vec3 view_normal = normalize((VIEW_MATRIX * vec4(NORMAL, 0.0)).xyz);  // Transform normal to view space
out = view_normal;  // Pass view space normal"

[sub_resource type="VisualShaderNodeVaryingSetter" id="VisualShaderNodeVaryingSetter_8reba"]
varying_name = "view_direction"
varying_type = 4

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_78ewf"]
parameter_name = "sphereScale"
qualifier = 2
default_value_enabled = true
default_value = 1.0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_fpc6l"]
parameter_name = "NormalMix"
qualifier = 2
default_value_enabled = true
default_value = 1.0

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded;

instance uniform float sphereScale = 1.0;

// Varyings
varying vec3 var_view_direction;

instance uniform float NormalMix = 1.0;



void vertex() {
// FloatParameter:5
	float n_out5p0 = sphereScale;


// FloatParameter:6
	float n_out6p0 = NormalMix;


	vec3 n_out3p0;
// Expression:3
	n_out3p0 = vec3(0.0, 0.0, 0.0);
	{
		vec3 view_normal = normalize((VIEW_MATRIX * vec4(NORMAL, 0.0)).xyz);  // Transform normal to view space
		n_out3p0 = view_normal;  // Pass view space normal
	}


// VaryingSetter:4
	var_view_direction = n_out3p0;


}

void fragment() {
	vec3 n_out7p0;
// Expression:7
	n_out7p0 = vec3(0.0, 0.0, 0.0);
	{
		vec3 view = normalize();
		vec3 debug_color = view * 0.5 + 0.5;
		
		// Calculate screen position and its derivatives
		vec3 pos = vec3(SCREEN_UV, 0.0);
		vec3 ddx_pos = dFdx(pos);
		vec3 ddy_pos = dFdy(pos);
		
		// Calculate normal from derivatives
		vec3 screen_normal = normalize(cross(ddx_pos, ddy_pos));
		
		// Calculate outline based on view and screen normal
		float outline = abs(dot(view, screen_normal));
		outline = 1.0 - smoothstep(0.50, 0.6, outline);
		
		n_out7p0 = mix(debug_color, vec3(0.0), outline);
	}


// Output:0
	ALBEDO = n_out7p0;


}
"
flags/unshaded = true
varyings/view_direction = "0,4"
nodes/vertex/0/position = Vector2(1440, 340)
nodes/vertex/2/node = SubResource("VisualShaderNodeExpression_ccw8l")
nodes/vertex/2/position = Vector2(-1380, 440)
nodes/vertex/2/size = Vector2(250, 150)
nodes/vertex/2/input_ports = ""
nodes/vertex/2/output_ports = ""
nodes/vertex/2/expression = ""
nodes/vertex/3/node = SubResource("VisualShaderNodeExpression_a6p4u")
nodes/vertex/3/position = Vector2(-120, 320)
nodes/vertex/3/size = Vector2(780, 420)
nodes/vertex/3/input_ports = "0,0,sphere_scale;1,0,normal_mix;"
nodes/vertex/3/output_ports = "0,4,out;"
nodes/vertex/3/expression = "vec3 view_normal = normalize((VIEW_MATRIX * vec4(NORMAL, 0.0)).xyz);  // Transform normal to view space
out = view_normal;  // Pass view space normal"
nodes/vertex/4/node = SubResource("VisualShaderNodeVaryingSetter_8reba")
nodes/vertex/4/position = Vector2(920, 180)
nodes/vertex/5/node = SubResource("VisualShaderNodeFloatParameter_78ewf")
nodes/vertex/5/position = Vector2(-540, 360)
nodes/vertex/6/node = SubResource("VisualShaderNodeFloatParameter_fpc6l")
nodes/vertex/6/position = Vector2(-560, 660)
nodes/vertex/connections = PackedInt32Array(6, 0, 3, 1, 5, 0, 3, 0, 3, 0, 4, 0)
nodes/fragment/0/position = Vector2(740, 180)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_sijua")
nodes/fragment/2/position = Vector2(-1540, -120)
nodes/fragment/3/node = SubResource("VisualShaderNodeVaryingGetter_sijua")
nodes/fragment/3/position = Vector2(-1120, 180)
nodes/fragment/5/node = SubResource("VisualShaderNodeExpression_wdsbm")
nodes/fragment/5/position = Vector2(-720, 420)
nodes/fragment/5/size = Vector2(620, 340)
nodes/fragment/5/input_ports = "0,4,view_direction;"
nodes/fragment/5/output_ports = "0,4,output0;"
nodes/fragment/5/expression = "vec3 view = normalize(view_direction);
vec3 debug_color = view * 0.5 + 0.5;
output0 = debug_color;"
nodes/fragment/6/node = SubResource("VisualShaderNodeFresnel_lumjx")
nodes/fragment/6/position = Vector2(220, 320)
nodes/fragment/7/node = SubResource("VisualShaderNodeExpression_ktyvw")
nodes/fragment/7/position = Vector2(-760, -280)
nodes/fragment/7/size = Vector2(620, 560)
nodes/fragment/7/input_ports = "0,4,view_direction;"
nodes/fragment/7/output_ports = "0,4,output0;"
nodes/fragment/7/expression = "vec3 view = normalize(view_direction);
vec3 debug_color = view * 0.5 + 0.5;

// Calculate screen position and its derivatives
vec3 pos = vec3(SCREEN_UV, 0.0);
vec3 ddx_pos = dFdx(pos);
vec3 ddy_pos = dFdy(pos);

// Calculate normal from derivatives
vec3 screen_normal = normalize(cross(ddx_pos, ddy_pos));

// Calculate outline based on view and screen normal
float outline = abs(dot(view, screen_normal));
outline = 1.0 - smoothstep(0.50, 0.6, outline);

output0 = mix(debug_color, vec3(0.0), outline);"
nodes/fragment/connections = PackedInt32Array(3, 0, 5, 0, 5, 0, 6, 0, 7, 0, 0, 0)
nodes/light/0/position = Vector2(5180, -160)
nodes/light/14/node = SubResource("VisualShaderNodeDotProduct_wdsbm")
nodes/light/14/position = Vector2(1080, 320)
nodes/light/15/node = SubResource("VisualShaderNodeInput_lumjx")
nodes/light/15/position = Vector2(-340, 140)
nodes/light/16/node = SubResource("VisualShaderNodeInput_ktyvw")
nodes/light/16/position = Vector2(-380, 380)
nodes/light/17/node = SubResource("VisualShaderNodeInput_2surh")
nodes/light/17/position = Vector2(-380, -420)
nodes/light/18/node = SubResource("VisualShaderNodeInput_7jggf")
nodes/light/18/position = Vector2(-380, -300)
nodes/light/20/node = SubResource("VisualShaderNodeVectorOp_xs7ly")
nodes/light/20/position = Vector2(320, -340)
nodes/light/21/node = SubResource("VisualShaderNodeVectorFunc_h30ox")
nodes/light/21/position = Vector2(600, -320)
nodes/light/22/node = SubResource("VisualShaderNodeDotProduct_jaqig")
nodes/light/22/position = Vector2(920, -340)
nodes/light/23/node = SubResource("VisualShaderNodeInput_tx61k")
nodes/light/23/position = Vector2(500, -520)
nodes/light/25/node = SubResource("VisualShaderNodeFloatOp_a5taj")
nodes/light/25/position = Vector2(1700, -520)
nodes/light/26/node = SubResource("VisualShaderNodeFloatParameter_ovj6o")
nodes/light/26/position = Vector2(1018.4, -585.765)
nodes/light/27/node = SubResource("VisualShaderNodeFloatOp_1gw0q")
nodes/light/27/position = Vector2(1469.44, -531.535)
nodes/light/28/node = SubResource("VisualShaderNodeMix_7mly5")
nodes/light/28/position = Vector2(1600, -280)
nodes/light/29/node = SubResource("VisualShaderNodeFloatParameter_olxc2")
nodes/light/29/position = Vector2(1160, -220)
nodes/light/30/node = SubResource("VisualShaderNodeFloatOp_ewg7y")
nodes/light/30/position = Vector2(1937.71, -452.885)
nodes/light/31/node = SubResource("VisualShaderNodeSmoothStep_8reba")
nodes/light/31/position = Vector2(2860, -320)
nodes/light/32/node = SubResource("VisualShaderNodeFloatParameter_eqp0p")
nodes/light/32/position = Vector2(2180, -640)
nodes/light/33/node = SubResource("VisualShaderNodeFloatFunc_78ewf")
nodes/light/33/position = Vector2(2568.81, -608.661)
nodes/light/34/node = SubResource("VisualShaderNodeFloatOp_fpc6l")
nodes/light/34/position = Vector2(2546.81, -439.661)
nodes/light/35/node = SubResource("VisualShaderNodeFloatOp_n057q")
nodes/light/35/position = Vector2(3120, -320)
nodes/light/36/node = SubResource("VisualShaderNodeFloatParameter_je8oi")
nodes/light/36/position = Vector2(2140, -160)
nodes/light/37/node = SubResource("VisualShaderNodeVectorOp_xqppd")
nodes/light/37/position = Vector2(4360, -360)
nodes/light/38/node = SubResource("VisualShaderNodeColorParameter_nj5ee")
nodes/light/38/position = Vector2(4000, -660)
nodes/light/39/node = SubResource("VisualShaderNodeVectorCompose_wwkh1")
nodes/light/39/position = Vector2(3600, -400)
nodes/light/40/node = SubResource("VisualShaderNodeSmoothStep_5fxqp")
nodes/light/40/position = Vector2(1800, 460)
nodes/light/41/node = SubResource("VisualShaderNodeFloatParameter_bd8jm")
nodes/light/41/position = Vector2(-80, 620)
nodes/light/42/node = SubResource("VisualShaderNodeFloatOp_o6yja")
nodes/light/42/position = Vector2(540, 500)
nodes/light/43/node = SubResource("VisualShaderNodeFloatOp_wagsx")
nodes/light/43/position = Vector2(440, 760)
nodes/light/44/node = SubResource("VisualShaderNodeFloatOp_cgmxv")
nodes/light/44/position = Vector2(1107.38, 535.422)
nodes/light/45/node = SubResource("VisualShaderNodeFloatOp_nsq7e")
nodes/light/45/position = Vector2(860, 420)
nodes/light/46/node = SubResource("VisualShaderNodeFresnel_86x63")
nodes/light/46/position = Vector2(3720, 660)
nodes/light/47/node = SubResource("VisualShaderNodeVectorOp_by2qv")
nodes/light/47/position = Vector2(4674.15, -117.072)
nodes/light/48/node = SubResource("VisualShaderNodeVectorCompose_4t3d0")
nodes/light/48/position = Vector2(4240, 600)
nodes/light/49/node = SubResource("VisualShaderNodeVectorOp_t13me")
nodes/light/49/position = Vector2(4560, 600)
nodes/light/50/node = SubResource("VisualShaderNodeColorParameter_y74mc")
nodes/light/50/position = Vector2(3760, 340)
nodes/light/51/node = SubResource("VisualShaderNodeInput_ibjci")
nodes/light/51/position = Vector2(2000, 360)
nodes/light/54/node = SubResource("VisualShaderNodeVectorFunc_j6eyr")
nodes/light/54/position = Vector2(3440, 280)
nodes/light/56/node = SubResource("VisualShaderNodeVectorOp_l6n84")
nodes/light/56/position = Vector2(2700, 20)
nodes/light/57/node = SubResource("VisualShaderNodeTransformVecMult_m05ms")
nodes/light/57/position = Vector2(2960, 260)
nodes/light/58/node = SubResource("VisualShaderNodeInput_v6o5x")
nodes/light/58/position = Vector2(1620, 140)
nodes/light/59/node = SubResource("VisualShaderNodeVectorCompose_1k56i")
nodes/light/59/position = Vector2(2580, 220)
nodes/light/60/node = SubResource("VisualShaderNodeFloatParameter_p5m3e")
nodes/light/60/position = Vector2(2120, 740)
nodes/light/62/node = SubResource("VisualShaderNodeVectorCompose_sijua")
nodes/light/62/position = Vector2(2140, 1100)
nodes/light/64/node = SubResource("VisualShaderNodeInput_xs7ly")
nodes/light/64/position = Vector2(2440, 1120)
nodes/light/65/node = SubResource("VisualShaderNodeMix_h30ox")
nodes/light/65/position = Vector2(2980, 720)
nodes/light/66/node = SubResource("VisualShaderNodeVaryingGetter_jaqig")
nodes/light/66/position = Vector2(3080, 960)
nodes/light/67/node = SubResource("VisualShaderNodeExpression_tx61k")
nodes/light/67/position = Vector2(3140, 1100)
nodes/light/67/size = Vector2(640, 360)
nodes/light/67/input_ports = "0,4,view_direction;1,0,sphere_scale;"
nodes/light/67/output_ports = "0,4,OUTPUT;"
nodes/light/67/expression = "vec3 view_normal = normalize(view_direction);
vec3 base_normal = vec3(0.0, 0.0, -1.0);
float scale = clamp(abs(sphere_scale), 0.0, 1.0);
vec3 fresnel = mix(base_normal, view_normal, scale);
OUTPUT = normalize(sphere_scale < 0.0 ? -fresnel : fresnel);"
nodes/light/68/node = SubResource("VisualShaderNodeFloatParameter_a5taj")
nodes/light/68/position = Vector2(3300, 580)
nodes/light/69/node = SubResource("VisualShaderNodeParameterRef_ovj6o")
nodes/light/69/position = Vector2(2849.63, 1405.97)
nodes/light/70/node = SubResource("VisualShaderNodeFloatOp_7mly5")
nodes/light/70/position = Vector2(4103.35, 940.223)
nodes/light/71/node = SubResource("VisualShaderNodeFloatParameter_ewg7y")
nodes/light/71/position = Vector2(3780, 1180)
nodes/light/connections = PackedInt32Array(15, 0, 14, 0, 16, 0, 14, 1, 17, 0, 20, 0, 18, 0, 20, 1, 20, 0, 21, 0, 21, 0, 22, 1, 23, 0, 22, 0, 22, 0, 27, 1, 26, 0, 27, 0, 27, 0, 25, 0, 29, 0, 28, 2, 25, 0, 30, 0, 28, 0, 30, 1, 30, 0, 31, 2, 32, 0, 33, 0, 32, 0, 34, 0, 34, 0, 31, 0, 31, 0, 35, 0, 36, 0, 35, 1, 38, 0, 37, 0, 35, 0, 39, 0, 35, 0, 39, 1, 35, 0, 39, 2, 39, 0, 37, 1, 14, 0, 40, 2, 41, 0, 43, 0, 43, 0, 40, 1, 41, 0, 42, 0, 42, 0, 45, 0, 45, 0, 44, 0, 44, 0, 40, 0, 37, 0, 47, 0, 50, 0, 49, 0, 48, 0, 49, 1, 49, 0, 47, 1, 51, 0, 57, 1, 57, 0, 54, 0, 51, 0, 56, 0, 59, 0, 56, 1, 60, 0, 59, 2, 60, 0, 59, 0, 68, 0, 46, 3, 66, 0, 67, 0, 69, 0, 67, 1, 46, 0, 70, 0, 71, 0, 70, 1, 70, 0, 48, 2, 70, 0, 48, 1, 70, 0, 48, 0, 67, 0, 46, 0)
